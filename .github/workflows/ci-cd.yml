name: 🚀 CI/CD Pipeline - Navoiyda Bugun

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main]

jobs:
  # Frontend Tests va Build
  frontend:
    name: 🎨 Frontend CI/CD
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./navoiyda-bugun/frontend

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./navoiyda-bugun/frontend/package-lock.json"

      - name: 📋 Install Dependencies
        run: npm ci

      - name: 🔍 TypeScript Check
        run: npm run type-check

      - name: 🧹 ESLint Check
        run: npm run lint

      - name: 🏗️ Build Frontend
        run: npm run build

      - name: 📱 Build Android (PWA)
        run: |
          npm run build
          npx cap sync android

      - name: 📊 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./navoiyda-bugun/frontend/dist/

  # Backend Tests va Build
  backend:
    name: 🔧 Backend CI/CD
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./navoiyda-bugun/backend

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "./navoiyda-bugun/backend/package-lock.json"

      - name: 📋 Install Dependencies
        run: npm ci

      - name: 🔍 TypeScript Check
        run: npm run type-check

      - name: 🏗️ Build Backend
        run: npm run build

      - name: 📊 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: ./navoiyda-bugun/backend/dist/

  # Security Scan
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔍 Run Security Audit
        run: |
          cd navoiyda-bugun/frontend && npm audit --audit-level=high
          cd ../backend && npm audit --audit-level=high

      - name: 🛡️ CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript,typescript

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Deploy (Production)
  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [frontend, backend, security]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Download Frontend Build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./frontend-build

      - name: 📦 Download Backend Build
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: ./backend-build

      - name: 🚀 Deploy to Server
        run: |
          echo "🚀 Deploying to production server..."
          echo "📱 Frontend deployed successfully"
          echo "🔧 Backend deployed successfully"
          echo "✅ Deployment completed!"

  # Notification
  notify:
    name: 📢 Notification
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()

    steps:
      - name: 📢 Send Notification
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ Deployment successful! 🎉"
          else
            echo "❌ Deployment failed! 😢"
          fi
